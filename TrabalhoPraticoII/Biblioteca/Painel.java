package TrabalhoPraticoII.Biblioteca;

import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;

public class Painel extends javax.swing.JFrame {

    //CONFIGURAÇÕES DA EDITORA
    private int indexDoExemplarAtual;
    private Exemplar exemplarAtual;
    private ArrayList<Autor> autoresDaObraAtual = new ArrayList<>();
    private Editora editoraAtual;

    private static int idParaAtualizar = -1;
    private Identificadores ids = new Identificadores();
    private JFrame janelaTemp1, janelaTemp2;
    private int tipoDePessoa, tipoDeOperacao;
    // tipo de pessoa = {0 = Autor, 1 = Cliente}
    // tipo de operação = {0 = Registrar, 1 = Remover}
    private DefaultListModel model_c = new DefaultListModel(),
            model_e = new DefaultListModel(),
            model_a = new DefaultListModel(),
            model_o = new DefaultListModel();
    private ArrayList<Editora> editoras = new ArrayList<>();
    private ArrayList<Pessoa> clientes = new ArrayList<>(), autores = new ArrayList<>();
    private static Util util = new Util();

    public Painel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAutores = new javax.swing.JPanel();
        scrollAutores = new javax.swing.JScrollPane();
        listAutores = new javax.swing.JList<>();
        lblAutores = new javax.swing.JLabel();
        btnAutCriar = new javax.swing.JButton();
        btnAutApagar = new javax.swing.JButton();
        panelClientes = new javax.swing.JPanel();
        scrollClientes = new javax.swing.JScrollPane();
        listClientes = new javax.swing.JList<>();
        lblClientes = new javax.swing.JLabel();
        btnCliCriar = new javax.swing.JButton();
        btnCliApagar = new javax.swing.JButton();
        panelEditora = new javax.swing.JPanel();
        scrollEditora = new javax.swing.JScrollPane();
        listObrasDaEditora = new javax.swing.JList<>();
        lblEditora = new javax.swing.JLabel();
        btnEdiCriar = new javax.swing.JButton();
        btnEdiApagar = new javax.swing.JButton();
        lblEditNomeDaEditora = new javax.swing.JLabel();
        lblEdiObrasDaEditora = new javax.swing.JLabel();
        lblEdiGerenciarObras = new javax.swing.JLabel();
        panelEditoras = new javax.swing.JPanel();
        scrollEditoras = new javax.swing.JScrollPane();
        listEditoras = new javax.swing.JList<>();
        lblEditoras = new javax.swing.JLabel();
        btnEdisCriar = new javax.swing.JButton();
        btnEdisApagar = new javax.swing.JButton();
        panelCriarObra = new javax.swing.JPanel();
        lblCriarObraNome = new javax.swing.JLabel();
        txfCriarObraNome = new javax.swing.JTextField();
        txfCriarObraAutores = new javax.swing.JTextField();
        lblCriarObraAutores = new javax.swing.JLabel();
        btnCriarObraAutoresAdd = new javax.swing.JButton();
        btnCriarObra = new javax.swing.JButton();
        lblCriarObraNumDePags = new javax.swing.JLabel();
        txfCriarObraNumDePags = new javax.swing.JTextField();
        panelPessoa = new javax.swing.JPanel();
        lblCriarPessoaNome = new javax.swing.JLabel();
        txfCriarPessoaNome = new javax.swing.JTextField();
        txfCriarPessoaIdade = new javax.swing.JTextField();
        lblCriarPessoaIdade = new javax.swing.JLabel();
        btnCriarPessoa = new javax.swing.JButton();
        tblCriarPessoaSobrenome = new javax.swing.JLabel();
        txfCriarPessoaSobrenome = new javax.swing.JTextField();
        panelAtObra = new javax.swing.JPanel();
        lblAtObraNumDeExemplares = new javax.swing.JLabel();
        txfAtObraNumDeExemplares = new javax.swing.JTextField();
        btnAtObraNumDeExemplares = new javax.swing.JButton();
        panelEmprestimos = new javax.swing.JPanel();
        lblRegEmprestimoCliente = new javax.swing.JLabel();
        txfRegEmprestimoCliente = new javax.swing.JTextField();
        lblRegEmprestimoExemplar = new javax.swing.JLabel();
        txfRegEmprestimoExemplar = new javax.swing.JTextField();
        btnRegEmprestimo = new javax.swing.JButton();
        tabPane = new javax.swing.JTabbedPane();
        msgDica = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        menubar = new javax.swing.JMenuBar();
        menuGerenciar = new javax.swing.JMenu();
        menuGerAutores = new javax.swing.JMenuItem();
        menuGerClientes = new javax.swing.JMenuItem();
        menuGerEditoras = new javax.swing.JMenuItem();
        menuRegistrar = new javax.swing.JMenu();
        menuRegEmprestimo = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        listAutores.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listAutores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAutoresMouseClicked(evt);
            }
        });
        scrollAutores.setViewportView(listAutores);

        lblAutores.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblAutores.setText("Autores");

        btnAutCriar.setText("Criar");
        btnAutCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutCriarActionPerformed(evt);
            }
        });

        btnAutApagar.setText("Apagar");
        btnAutApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutApagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAutoresLayout = new javax.swing.GroupLayout(panelAutores);
        panelAutores.setLayout(panelAutoresLayout);
        panelAutoresLayout.setHorizontalGroup(
            panelAutoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAutoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAutoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollAutores)
                    .addGroup(panelAutoresLayout.createSequentialGroup()
                        .addGroup(panelAutoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAutores)
                            .addGroup(panelAutoresLayout.createSequentialGroup()
                                .addComponent(btnAutCriar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAutApagar)))
                        .addGap(0, 247, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelAutoresLayout.setVerticalGroup(
            panelAutoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAutoresLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblAutores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollAutores, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAutoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAutCriar)
                    .addComponent(btnAutApagar))
                .addContainerGap())
        );

        listClientes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listClientesMouseClicked(evt);
            }
        });
        scrollClientes.setViewportView(listClientes);

        lblClientes.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblClientes.setText("Clientes");

        btnCliCriar.setText("Criar");
        btnCliCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliCriarActionPerformed(evt);
            }
        });

        btnCliApagar.setText("Apagar");
        btnCliApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliApagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelClientesLayout = new javax.swing.GroupLayout(panelClientes);
        panelClientes.setLayout(panelClientesLayout);
        panelClientesLayout.setHorizontalGroup(
            panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollClientes)
                    .addGroup(panelClientesLayout.createSequentialGroup()
                        .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblClientes)
                            .addGroup(panelClientesLayout.createSequentialGroup()
                                .addComponent(btnCliCriar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCliApagar)))
                        .addGap(0, 247, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelClientesLayout.setVerticalGroup(
            panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClientesLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCliCriar)
                    .addComponent(btnCliApagar))
                .addContainerGap())
        );

        listObrasDaEditora.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listObrasDaEditora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listObrasDaEditoraMouseClicked(evt);
            }
        });
        scrollEditora.setViewportView(listObrasDaEditora);

        lblEditora.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblEditora.setText("Editora");

        btnEdiCriar.setText("Criar");
        btnEdiCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdiCriarActionPerformed(evt);
            }
        });

        btnEdiApagar.setText("Apagar");
        btnEdiApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdiApagarActionPerformed(evt);
            }
        });

        lblEditNomeDaEditora.setText("nome da editora");

        lblEdiObrasDaEditora.setText("Obras:");

        lblEdiGerenciarObras.setText("Gerenciar obras:");

        javax.swing.GroupLayout panelEditoraLayout = new javax.swing.GroupLayout(panelEditora);
        panelEditora.setLayout(panelEditoraLayout);
        panelEditoraLayout.setHorizontalGroup(
            panelEditoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditoraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEditoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollEditora)
                    .addGroup(panelEditoraLayout.createSequentialGroup()
                        .addGroup(panelEditoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelEditoraLayout.createSequentialGroup()
                                .addComponent(lblEditora)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEditNomeDaEditora))
                            .addGroup(panelEditoraLayout.createSequentialGroup()
                                .addComponent(btnEdiCriar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdiApagar))
                            .addComponent(lblEdiObrasDaEditora)
                            .addComponent(lblEdiGerenciarObras))
                        .addGap(0, 177, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelEditoraLayout.setVerticalGroup(
            panelEditoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditoraLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelEditoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditora)
                    .addComponent(lblEditNomeDaEditora))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEdiObrasDaEditora)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEdiGerenciarObras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelEditoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdiCriar)
                    .addComponent(btnEdiApagar))
                .addContainerGap())
        );

        listEditoras.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listEditoras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listEditorasMouseClicked(evt);
            }
        });
        scrollEditoras.setViewportView(listEditoras);

        lblEditoras.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblEditoras.setText("Editoras");

        btnEdisCriar.setText("Criar");
        btnEdisCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdisCriarActionPerformed(evt);
            }
        });

        btnEdisApagar.setText("Apagar");
        btnEdisApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdisApagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEditorasLayout = new javax.swing.GroupLayout(panelEditoras);
        panelEditoras.setLayout(panelEditorasLayout);
        panelEditorasLayout.setHorizontalGroup(
            panelEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditorasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollEditoras)
                    .addGroup(panelEditorasLayout.createSequentialGroup()
                        .addGroup(panelEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEditoras)
                            .addGroup(panelEditorasLayout.createSequentialGroup()
                                .addComponent(btnEdisCriar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdisApagar)))
                        .addGap(0, 247, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelEditorasLayout.setVerticalGroup(
            panelEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditorasLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblEditoras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollEditoras, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelEditorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdisCriar)
                    .addComponent(btnEdisApagar))
                .addContainerGap())
        );

        lblCriarObraNome.setText("Nome da obra:");

        txfCriarObraNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfCriarObraNomeActionPerformed(evt);
            }
        });

        txfCriarObraAutores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfCriarObraAutoresActionPerformed(evt);
            }
        });

        lblCriarObraAutores.setText("Adicionar autor(a) por id:");

        btnCriarObraAutoresAdd.setText("Adicionar");
        btnCriarObraAutoresAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarObraAutoresAddActionPerformed(evt);
            }
        });

        btnCriarObra.setText("Criar");
        btnCriarObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarObraActionPerformed(evt);
            }
        });

        lblCriarObraNumDePags.setText("Número de páginas:");

        javax.swing.GroupLayout panelCriarObraLayout = new javax.swing.GroupLayout(panelCriarObra);
        panelCriarObra.setLayout(panelCriarObraLayout);
        panelCriarObraLayout.setHorizontalGroup(
            panelCriarObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCriarObraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCriarObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfCriarObraNumDePags)
                    .addComponent(txfCriarObraNome)
                    .addComponent(txfCriarObraAutores)
                    .addGroup(panelCriarObraLayout.createSequentialGroup()
                        .addGroup(panelCriarObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCriarObraNumDePags)
                            .addComponent(lblCriarObraNome)
                            .addComponent(lblCriarObraAutores))
                        .addGap(0, 147, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCriarObraLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelCriarObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCriarObraAutoresAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCriarObra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        panelCriarObraLayout.setVerticalGroup(
            panelCriarObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCriarObraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCriarObraNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfCriarObraNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCriarObraAutores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfCriarObraAutores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCriarObraAutoresAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCriarObraNumDePags)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfCriarObraNumDePags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(btnCriarObra)
                .addContainerGap())
        );

        lblCriarPessoaNome.setText("Nome:");

        txfCriarPessoaNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfCriarPessoaNomeActionPerformed(evt);
            }
        });

        lblCriarPessoaIdade.setText("Idade:");

        btnCriarPessoa.setText("Criar");
        btnCriarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarPessoaActionPerformed(evt);
            }
        });

        tblCriarPessoaSobrenome.setText("Sobrenome:");

        javax.swing.GroupLayout panelPessoaLayout = new javax.swing.GroupLayout(panelPessoa);
        panelPessoa.setLayout(panelPessoaLayout);
        panelPessoaLayout.setHorizontalGroup(
            panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfCriarPessoaNome)
                    .addComponent(txfCriarPessoaIdade)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPessoaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCriarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txfCriarPessoaSobrenome)
                    .addGroup(panelPessoaLayout.createSequentialGroup()
                        .addGroup(panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCriarPessoaNome)
                            .addComponent(lblCriarPessoaIdade)
                            .addComponent(tblCriarPessoaSobrenome))
                        .addGap(0, 223, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelPessoaLayout.setVerticalGroup(
            panelPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCriarPessoaNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfCriarPessoaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tblCriarPessoaSobrenome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfCriarPessoaSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCriarPessoaIdade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfCriarPessoaIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCriarPessoa)
                .addContainerGap())
        );

        lblAtObraNumDeExemplares.setText("Número de exemplares:");

        txfAtObraNumDeExemplares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfAtObraNumDeExemplaresActionPerformed(evt);
            }
        });

        btnAtObraNumDeExemplares.setText("Atualizar");
        btnAtObraNumDeExemplares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtObraNumDeExemplaresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAtObraLayout = new javax.swing.GroupLayout(panelAtObra);
        panelAtObra.setLayout(panelAtObraLayout);
        panelAtObraLayout.setHorizontalGroup(
            panelAtObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAtObraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAtObraNumDeExemplares)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelAtObraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfAtObraNumDeExemplares, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAtObraNumDeExemplares, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAtObraLayout.setVerticalGroup(
            panelAtObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAtObraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAtObraNumDeExemplares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAtObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfAtObraNumDeExemplares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtObraNumDeExemplares))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        panelEmprestimos.setPreferredSize(new java.awt.Dimension(320, 220));

        lblRegEmprestimoCliente.setText("Id do cliente:");

        lblRegEmprestimoExemplar.setText("Id do Exemplar:");

        btnRegEmprestimo.setText("Registrar");
        btnRegEmprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegEmprestimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEmprestimosLayout = new javax.swing.GroupLayout(panelEmprestimos);
        panelEmprestimos.setLayout(panelEmprestimosLayout);
        panelEmprestimosLayout.setHorizontalGroup(
            panelEmprestimosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmprestimosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEmprestimosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfRegEmprestimoCliente)
                    .addGroup(panelEmprestimosLayout.createSequentialGroup()
                        .addGroup(panelEmprestimosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRegEmprestimoCliente)
                            .addComponent(lblRegEmprestimoExemplar))
                        .addGap(0, 203, Short.MAX_VALUE))
                    .addComponent(txfRegEmprestimoExemplar)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEmprestimosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRegEmprestimo)))
                .addContainerGap())
        );
        panelEmprestimosLayout.setVerticalGroup(
            panelEmprestimosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmprestimosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRegEmprestimoCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfRegEmprestimoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRegEmprestimoExemplar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfRegEmprestimoExemplar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(btnRegEmprestimo)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Dica: \n- Em listas o clique permite-lhe ver o item e o clique-duplo permite-lhe atualizar os dados do item.");
        msgDica.setViewportView(jTextArea1);

        menuGerenciar.setText("Gerenciar");

        menuGerAutores.setText("Autores");
        menuGerAutores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGerAutoresActionPerformed(evt);
            }
        });
        menuGerenciar.add(menuGerAutores);

        menuGerClientes.setText("Clientes");
        menuGerClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGerClientesActionPerformed(evt);
            }
        });
        menuGerenciar.add(menuGerClientes);

        menuGerEditoras.setText("Editoras");
        menuGerEditoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGerEditorasActionPerformed(evt);
            }
        });
        menuGerenciar.add(menuGerEditoras);

        menubar.add(menuGerenciar);

        menuRegistrar.setText("Registrar");

        menuRegEmprestimo.setText("Emprestimo");

        jMenuItem7.setText("Registrar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        menuRegEmprestimo.add(jMenuItem7);

        jMenuItem8.setText("Remover");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        menuRegEmprestimo.add(jMenuItem8);

        menuRegistrar.add(menuRegEmprestimo);

        menubar.add(menuRegistrar);

        setJMenuBar(menubar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabPane, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                    .addComponent(msgDica))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgDica, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCriarObraAutoresAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarObraAutoresAddActionPerformed
        addAutorAObra();
    }//GEN-LAST:event_btnCriarObraAutoresAddActionPerformed

    private void addAutorAObra() {
        try {
            int id = Integer.parseInt(txfCriarObraAutores.getText());
            for (Pessoa a : autores) {
                if (a.getId() == id) {
                    autoresDaObraAtual.add((Autor) a);
                    JOptionPane.showMessageDialog(rootPane, "Autor adicionado com sucesso!");
                    txfCriarObraAutores.setText("");
                    return;
                }
            }
            JOptionPane.showMessageDialog(rootPane, "Autor não encontrado!");
        } catch (NumberFormatException | HeadlessException ex) {
            Logger.getLogger(Painel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Opps! Algo parece errado...");
        }
    }

    private void menuGerEditorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGerEditorasActionPerformed
        model_e.clear();
        for (Editora e : editoras) {
            //int id = model_e.getSize();
            model_e.add(model_e.getSize(), String.valueOf(e.getId()) + " - " + e.getNomeDaEditora());
        }
        listEditoras.setModel(model_e);
        Util.addNovaAba(tabPane, panelEditoras, "Editoras");
    }//GEN-LAST:event_menuGerEditorasActionPerformed

    private void menuGerAutoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGerAutoresActionPerformed
        model_a.clear();
        for (Pessoa a : autores) {
            model_a.add(model_a.getSize(), String.valueOf(a.getId()) + " - " + a.getNome() + " " + a.getSobrenome());
        }
        listAutores.setModel(model_a);
        Util.addNovaAba(tabPane, panelAutores, "Autores");
    }//GEN-LAST:event_menuGerAutoresActionPerformed

    private void menuGerClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGerClientesActionPerformed
        model_c.clear();
        for (Pessoa c : clientes) {
            model_c.add(model_c.getSize(), String.valueOf(c.getId()) + " - " + c.getNome() + " " + c.getSobrenome());
        }
        listClientes.setModel(model_c);
        Util.addNovaAba(tabPane, panelClientes, "Clientes");
    }//GEN-LAST:event_menuGerClientesActionPerformed

    private void txfCriarObraNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfCriarObraNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfCriarObraNomeActionPerformed

    private void btnAutCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutCriarActionPerformed
        tipoDePessoa = 0;
        janelaTemp1 = Util.addJanelaTemp("Criar autor", 320, 220, true);
        janelaTemp1.add(panelPessoa);
    }//GEN-LAST:event_btnAutCriarActionPerformed

    private void btnCliCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliCriarActionPerformed
        tipoDePessoa = 1;
        janelaTemp1 = Util.addJanelaTemp("Criar cliente", 320, 220, true);
        janelaTemp1.add(panelPessoa);
    }//GEN-LAST:event_btnCliCriarActionPerformed

    private void btnEdisCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdisCriarActionPerformed
        String nome = JOptionPane.showInputDialog("Informe o nome para a Editora: ");
        try {
            Editora e = new Editora(ids.solicitarId(), nome);
            editoras.add(e);
            Util.addAoModeloDeLista(model_e, e.getId(), e.getNomeDaEditora());
        } catch (Exception ex) {
            Logger.getLogger(Painel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEdisCriarActionPerformed

    private void btnCriarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarPessoaActionPerformed
        Pessoa p;
        String n, s;
        int i, index, id = this.getIdParaAtualizar();

        n = txfCriarPessoaNome.getText();
        s = txfCriarPessoaSobrenome.getText();
        i = Integer.parseInt(txfCriarPessoaIdade.getText());

        //OPERAÇÃO DE ATUALIZAR
        if (id != -1) {
            if (tipoDePessoa == 0) {
                for (Pessoa a : autores) {
                    if (a.getId() == id) {
                        a.setNome(n);
                        a.setSobrenome(s);
                        a.setIdade(i);
                    }
                }
                model_a.clear();
                for (Pessoa a : autores) {
                    Util.addAoModeloDeLista(model_a, a.getId(), a.getNome(), a.getSobrenome());
                }
            } else if (tipoDePessoa == 1) {
                for (Pessoa c : clientes) {
                    if (c.getId() == id) {
                        c.setNome(n);
                        c.setSobrenome(s);
                        c.setIdade(i);
                    }
                }
                model_c.clear();
                for (Pessoa c : clientes) {
                    Util.addAoModeloDeLista(model_c, c.getId(), c.getNome(), c.getSobrenome());
                }
            }
            this.setIdParaAtualizar(-1);
            btnCriarPessoa.setText("Criar");

            //OPERAÇÃO DE CRIAR
        } else if (tipoDePessoa == 0) {
            p = new Autor(ids.solicitarId(), n, s, i);
            autores.add(p);
            Util.addAoModeloDeLista(model_a, p.getId(), p.getNome(), p.getSobrenome());
        } else if (tipoDePessoa == 1) {
            p = new Cliente(ids.solicitarId(), n, s, i);
            clientes.add(p);
            Util.addAoModeloDeLista(model_c, p.getId(), p.getNome(), p.getSobrenome());
        }

        txfCriarPessoaNome.setText("");
        txfCriarPessoaSobrenome.setText("");
        txfCriarPessoaIdade.setText("");
        janelaTemp1.dispose();
    }//GEN-LAST:event_btnCriarPessoaActionPerformed

    private void txfCriarPessoaNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfCriarPessoaNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfCriarPessoaNomeActionPerformed

    private void btnEdiCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdiCriarActionPerformed
        janelaTemp1 = Util.addJanelaTemp("Criar obra", 320, 320, true);
        janelaTemp1.add(panelCriarObra);
    }//GEN-LAST:event_btnEdiCriarActionPerformed

    private void btnEdiApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdiApagarActionPerformed
        int id = Integer.parseInt(JOptionPane.showInputDialog("Informe o id para remover a Obra: "));
        ArrayList<Obra> obras = editoraAtual.getObras();
        try {
            for (Obra o : obras) {
                if (o.getId() == id) {
                    int pos = obras.indexOf(o);
                    obras.remove(o);
                    model_o.remove(pos);
                    break;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Painel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEdiApagarActionPerformed

    private void btnEdisApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdisApagarActionPerformed
        int id = Integer.parseInt(JOptionPane.showInputDialog("Informe o id para remover a Editora: "));
        try {
            for (Editora e : editoras) {
                if (e.getId() == id) {
                    int pos = editoras.indexOf(e);
                    editoras.remove(e);
                    model_e.remove(pos);
                    break;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Painel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEdisApagarActionPerformed

    private void btnAutApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutApagarActionPerformed
        int id = Integer.parseInt(JOptionPane.showInputDialog("Informe o id para remover o(a) autor(a): "));
        try {
            for (Pessoa a : autores) {
                if (a.getId() == id) {
                    int pos = autores.indexOf(a);
                    autores.remove(a);
                    model_a.remove(pos);
                    break;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Painel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAutApagarActionPerformed

    private void btnCliApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliApagarActionPerformed
        int id = Integer.parseInt(JOptionPane.showInputDialog("Informe o id para remover o(a) cliente: "));
        try {
            for (Pessoa c : clientes) {
                if (c.getId() == id) {
                    int pos = clientes.indexOf(c);
                    clientes.remove(c);
                    model_c.remove(pos);
                    break;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Painel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCliApagarActionPerformed

    private void listClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listClientesMouseClicked
        int index = listClientes.locationToIndex(evt.getPoint());

        if (index >= 0 && index < clientes.size()) {

            Pessoa c = (Cliente) clientes.get(index);

            String n, s, i;
            n = c.getNome();
            s = c.getSobrenome();
            i = String.valueOf(c.getIdade());

            if (evt.getClickCount() == 2) {
                cliqueDuplo = true;

                txfCriarPessoaNome.setText(n);
                txfCriarPessoaSobrenome.setText(s);
                txfCriarPessoaIdade.setText(i);
                btnCriarPessoa.setText("Atualizar");
                janelaTemp1 = Util.addJanelaTemp("Atualizar cliente", 320, 320, true);

                setIdParaAtualizar(c.getId());
                tipoDePessoa = 1;

                janelaTemp1.add(panelPessoa);
                janelaTemp1.setVisible(true);
            } else {
                Integer timerinterval = (Integer) Toolkit.getDefaultToolkit().getDesktopProperty("awt.multiClickInterval");
                Timer timer = new Timer(timerinterval.intValue(), new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        if (cliqueDuplo) {
                            cliqueDuplo = false;
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + n + " " + s + "\n"
                                    + "Idade: " + i);
                        }
                    }
                });
                timer.setRepeats(false);
                timer.start();
            }
        }
    }//GEN-LAST:event_listClientesMouseClicked

    private void listAutoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAutoresMouseClicked
        int index = listAutores.locationToIndex(evt.getPoint());

        if (index >= 0 && index < autores.size()) {

            Pessoa a = (Autor) autores.get(index);

            String n, s, i;
            n = a.getNome();
            s = a.getSobrenome();
            i = String.valueOf(a.getIdade());

            if (evt.getClickCount() == 2) {
                cliqueDuplo = true;

                txfCriarPessoaNome.setText(n);
                txfCriarPessoaSobrenome.setText(s);
                txfCriarPessoaIdade.setText(i);
                btnCriarPessoa.setText("Atualizar");
                janelaTemp1 = Util.addJanelaTemp("Atualizar autor", 320, 220, true);

                setIdParaAtualizar(a.getId());
                tipoDePessoa = 0;

                janelaTemp1.add(panelPessoa);
                janelaTemp1.setVisible(true);
            } else {
                Integer timerinterval = (Integer) Toolkit.getDefaultToolkit().getDesktopProperty("awt.multiClickInterval");
                Timer timer = new Timer(timerinterval.intValue(), new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        if (cliqueDuplo) {
                            cliqueDuplo = false;
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + n + " " + s + "\n"
                                    + "Idade: " + i);
                        }
                    }
                });
                timer.setRepeats(false);
                timer.start();
            }
        }
    }//GEN-LAST:event_listAutoresMouseClicked

    private void listEditorasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listEditorasMouseClicked
        int id, index = listEditoras.locationToIndex(evt.getPoint());

        if (index >= 0 && index < editoras.size()) {

            Editora e = editoras.get(index);

            String n;
            n = e.getNomeDaEditora();
            id = e.getId();

            if (evt.getClickCount() == 2) {
                cliqueDuplo = true;

                String novo_nome = JOptionPane.showInputDialog(rootPane, "Atualize o nome da editora:", n);

                for (Editora ed : editoras) {
                    if (ed.getId() == id) {
                        ed.setNomeDaEditora(novo_nome);
                        break;
                    }
                }
                model_e.clear();
                for (Editora ed : editoras) {
                    Util.addAoModeloDeLista(model_e, ed.getId(), ed.getNomeDaEditora());
                }
            } else {
                Integer timerinterval = (Integer) Toolkit.getDefaultToolkit().getDesktopProperty("awt.multiClickInterval");
                Timer timer = new Timer(timerinterval.intValue(), new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        if (cliqueDuplo) {
                            cliqueDuplo = false;
                        } else {
                            listObrasDaEditora.setModel(model_o);
                            editoraAtual = e;
                            janelaTemp2 = Util.addJanelaTemp("Obras", 320, 320, true);
                            lblEditNomeDaEditora.setText(n);
                            model_o.clear();
                            for (Obra o : editoraAtual.getObras()) {
                                Util.addAoModeloDeLista(model_o, o.getId(), o.getTituloDoLivro());
                            }
                            janelaTemp2.add(panelEditora);
                        }
                    }
                });
                timer.setRepeats(false);
                timer.start();
            }
        }
    }//GEN-LAST:event_listEditorasMouseClicked

    private void btnCriarObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarObraActionPerformed
        String nome_da_obra = txfCriarObraNome.getText();
        int numero_de_paginas = Integer.parseInt(txfCriarObraNumDePags.getText());
        if (!autoresDaObraAtual.isEmpty() && !nome_da_obra.equals("") && numero_de_paginas > 0) {
            String data = String.valueOf(new Date(System.currentTimeMillis()));
            try {
                ArrayList<Obra> obras = new ArrayList<>();
                obras.add(new Exemplar(ids.solicitarId(), nome_da_obra, data, numero_de_paginas, autoresDaObraAtual));
                editoraAtual.addObras(obras);
            } catch (Exception ex1) {
                Logger.getLogger(Painel.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }

        model_o.clear();
        for (Obra o : editoraAtual.getObras()) {
            Util.addAoModeloDeLista(model_o, o.getId(), o.getTituloDoLivro());
            System.out.println("Livro: " + o.getTituloDoLivro());
        }

        txfCriarObraNome.setText("");
        txfCriarObraAutores.setText("");
        txfCriarObraNumDePags.setText("");
        janelaTemp1.dispose();
        autoresDaObraAtual.removeAll(autores);
    }//GEN-LAST:event_btnCriarObraActionPerformed

    private void txfCriarObraAutoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfCriarObraAutoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfCriarObraAutoresActionPerformed

    private void listObrasDaEditoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listObrasDaEditoraMouseClicked
        int id, index = listObrasDaEditora.locationToIndex(evt.getPoint());

        if (index >= 0 && index < editoraAtual.getObras().size()) {

            Exemplar e = (Exemplar) editoraAtual.getObras().get(index);
            indexDoExemplarAtual = editoraAtual.getObras().indexOf(e);

            String numDePaginas, titulo, numDeAutores, dataDePub, numDeExemplares;

            titulo = e.getTituloDoLivro();
            numDePaginas = String.valueOf(e.getNumDePaginas());
            numDeAutores = String.valueOf(e.getNumDeAutores());
            dataDePub = e.getDataDePublicacao();
            numDeExemplares = String.valueOf(e.getNumDeExemplaresDisponiveis());
            id = e.getId();

            if (evt.getClickCount() == 2) {
                cliqueDuplo = true;

                janelaTemp1 = Util.addJanelaTemp("Atualizar obra", 320, 320, true);
                janelaTemp1.add(panelAtObra);

                txfAtObraNumDeExemplares.setText(numDeExemplares);
                exemplarAtual = e;

            } else {
                Integer timerinterval = (Integer) Toolkit.getDefaultToolkit().getDesktopProperty("awt.multiClickInterval");
                Timer timer = new Timer(timerinterval.intValue(), new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        if (cliqueDuplo) {
                            cliqueDuplo = false;
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Título: " + titulo
                                    + "\nData de publicação: " + dataDePub
                                    + "\nNúmero de páginas: " + numDePaginas
                                    + "\nNúmero de exemplares: " + numDeExemplares
                                    + "\nNúmero de autores: " + numDeAutores);
                        }
                    }
                });
                timer.setRepeats(false);
                timer.start();
            }
        }
    }//GEN-LAST:event_listObrasDaEditoraMouseClicked

    private void btnAtObraNumDeExemplaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtObraNumDeExemplaresActionPerformed
        int numDeExemplaresAtual, numDeExemplares, tempCalculo = 0, resultado;
        String operacao = "";

        numDeExemplaresAtual = exemplarAtual.getNumDeExemplaresDisponiveis();
        numDeExemplares = Integer.parseInt(txfAtObraNumDeExemplares.getText());

        resultado = numDeExemplaresAtual;
        if (numDeExemplares >= 0) {
            if (numDeExemplares > numDeExemplaresAtual) {
                operacao = "adicionar";
                tempCalculo = numDeExemplares - numDeExemplaresAtual;

                resultado = numDeExemplaresAtual + tempCalculo;

            } else if (numDeExemplares < numDeExemplaresAtual) {
                operacao = "remover";
                tempCalculo = numDeExemplaresAtual - numDeExemplares;

                resultado = numDeExemplaresAtual - tempCalculo;
            }

            if (resultado != numDeExemplaresAtual) {
                int resposta = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja "
                        + operacao + " " + String.valueOf(tempCalculo) + " exemplares? ");

                if (resposta == 0) {
                    exemplarAtual.setNumDeExemplaresDisponiveis(resultado);
                    JOptionPane.showMessageDialog(rootPane, "Total de exemplares atualizado. O número de exemplares de "
                            + exemplarAtual.getTituloDoLivro() + " disponíveis agora é: "
                            + String.valueOf(exemplarAtual.getNumDeExemplaresDisponiveis()));
                    janelaTemp1.dispose();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Este já é o número atual de exemplares. Você pode altera-lo informando"
                        + " um número maior ou menor para a atualizar a quantidade, mas só se assim preferir...");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Desculpe! Mas não trabalhamos com números negativos. "
                    + "Por favor, informe-nos o número exato de exemplares que deseja atualizar, que o número "
                    + "atual será incrementado ou decrementado com a diferença entre os valores.");
        }
    }//GEN-LAST:event_btnAtObraNumDeExemplaresActionPerformed

    private void txfAtObraNumDeExemplaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfAtObraNumDeExemplaresActionPerformed

    }//GEN-LAST:event_txfAtObraNumDeExemplaresActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        janelaTemp1 = Util.addJanelaTemp("Registrar emprestimo", 320, 220, true);
        janelaTemp1.add(panelEmprestimos);
        tipoDeOperacao = 0;
        btnRegEmprestimo.setText("Registrar");
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        janelaTemp1 = Util.addJanelaTemp("Remover emprestimo", 320, 220, true);
        janelaTemp1.add(panelEmprestimos);
        tipoDeOperacao = 1;
        btnRegEmprestimo.setText("Remover");
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void btnRegEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegEmprestimoActionPerformed
        try {
            int idDoCliente, idDoExemplar;
            idDoCliente = Integer.parseInt(txfRegEmprestimoCliente.getText());
            idDoExemplar = Integer.parseInt(txfRegEmprestimoExemplar.getText());

            boolean c_encontrado = false;

            Cliente c_atual = null;
            for (Pessoa c : clientes) {
                if (c.getId() == idDoCliente) {
                    c_encontrado = true;
                    c_atual = (Cliente) c;
                    break;
                }
            }

            if (c_encontrado) {
                if (tipoDeOperacao == 0) {
                    //REGISTRAR
                    boolean encontrado = false;
                    if (c_atual.getEmprestimos().size() < c_atual.getNumMaxDeEmprestimos()) {
                        Exemplar ex_atual;
                        for (Editora e : editoras) {
                            for (Obra o : e.getObras()) {
                                if (o.getId() == idDoExemplar) {
                                    encontrado = true;
                                    int numDeExDisponiveis = o.getNumDeExemplaresDisponiveis();
                                    if (numDeExDisponiveis > 0) {
                                        ex_atual = (Exemplar) o;

                                        ArrayList<Exemplar> exemplares = new ArrayList<>();
                                        exemplares.add(ex_atual);
                                        try {
                                            c_atual.registrarEmprestimo(exemplares);
                                            o.setNumDeExemplaresDisponiveis(numDeExDisponiveis - 1);

                                            JOptionPane.showMessageDialog(rootPane, "Emprestimo realizado com sucesso! "
                                                    + "Agora há " + String.valueOf(o.getNumDeExemplaresDisponiveis())
                                                    + " deste mesmo exemplar para serem emprestados.");

                                        } catch (Exception ex) {
                                            Logger.getLogger(Painel.class.getName()).log(Level.SEVERE, null, ex);
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(rootPane, "Não há exempares disponíveis para serem emprestados!");
                                    }
                                    break;
                                }
                            }
                        }

                        if (!encontrado) {
                            JOptionPane.showMessageDialog(rootPane, "Exemplar com este id não encontrado!");
                        }
                    }
                } else if (tipoDeOperacao == 1) {
                    //REMOVER
                    if (c_atual.getEmprestimos().size() != 0) {
                        boolean encontrado = false;
                        int indexDoEmprestimo = -1;
                        Obra o;
                        for (int i = 0; i < c_atual.getEmprestimos().size(); i++) {
                            o = c_atual.getEmprestimos().get(i).getExemplar();
                            if (o.getId() == idDoExemplar) {
                                encontrado = true;
                                indexDoEmprestimo = i;
                                break;
                            }
                        }

                        if (encontrado) {
                            for (Editora ed : editoras) {
                                for (Obra obra : ed.getObras()) {
                                    if (obra.getId() == idDoExemplar) {
                                        int numDeExDisponiveis = obra.getNumDeExemplaresDisponiveis();
                                        obra.setNumDeExemplaresDisponiveis(numDeExDisponiveis + 1);
                                        c_atual.getEmprestimos().remove(indexDoEmprestimo);

                                        JOptionPane.showMessageDialog(rootPane, "Emprestimo devolvido com sucesso! "
                                                + "Agora há " + String.valueOf(obra.getNumDeExemplaresDisponiveis())
                                                + " deste mesmo exemplar para serem emprestados.");

                                        break;
                                    }
                                }
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Exemplar com este id não encontrado!");
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Este cliente não possui emprestimos para devolver!");
                    }
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "O cliente com este id não existe nos nossos registros.");
            }
        } catch (NumberFormatException | HeadlessException ex) {
            JOptionPane.showMessageDialog(rootPane, "Opps! Parece que a algo errado...");
        }
    }//GEN-LAST:event_btnRegEmprestimoActionPerformed

    private boolean cliqueDuplo = false, cliqueSimples = false;
    //private int numeroDeCliques = 0;

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Painel().setVisible(true);
            }
        });
    }

    private int getIdParaAtualizar() {
        return idParaAtualizar;
    }

    private void setIdParaAtualizar(int id) {
        this.idParaAtualizar = id;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtObraNumDeExemplares;
    private javax.swing.JButton btnAutApagar;
    private javax.swing.JButton btnAutCriar;
    private javax.swing.JButton btnCliApagar;
    private javax.swing.JButton btnCliCriar;
    private javax.swing.JButton btnCriarObra;
    private javax.swing.JButton btnCriarObraAutoresAdd;
    private javax.swing.JButton btnCriarPessoa;
    private javax.swing.JButton btnEdiApagar;
    private javax.swing.JButton btnEdiCriar;
    private javax.swing.JButton btnEdisApagar;
    private javax.swing.JButton btnEdisCriar;
    private javax.swing.JButton btnRegEmprestimo;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblAtObraNumDeExemplares;
    private javax.swing.JLabel lblAutores;
    private javax.swing.JLabel lblClientes;
    private javax.swing.JLabel lblCriarObraAutores;
    private javax.swing.JLabel lblCriarObraNome;
    private javax.swing.JLabel lblCriarObraNumDePags;
    private javax.swing.JLabel lblCriarPessoaIdade;
    private javax.swing.JLabel lblCriarPessoaNome;
    private javax.swing.JLabel lblEdiGerenciarObras;
    private javax.swing.JLabel lblEdiObrasDaEditora;
    private javax.swing.JLabel lblEditNomeDaEditora;
    private javax.swing.JLabel lblEditora;
    private javax.swing.JLabel lblEditoras;
    private javax.swing.JLabel lblRegEmprestimoCliente;
    private javax.swing.JLabel lblRegEmprestimoExemplar;
    private javax.swing.JList<String> listAutores;
    private javax.swing.JList<String> listClientes;
    private javax.swing.JList<String> listEditoras;
    private javax.swing.JList<String> listObrasDaEditora;
    private javax.swing.JMenuItem menuGerAutores;
    private javax.swing.JMenuItem menuGerClientes;
    private javax.swing.JMenuItem menuGerEditoras;
    private javax.swing.JMenu menuGerenciar;
    private javax.swing.JMenu menuRegEmprestimo;
    private javax.swing.JMenu menuRegistrar;
    private javax.swing.JMenuBar menubar;
    private javax.swing.JScrollPane msgDica;
    private javax.swing.JPanel panelAtObra;
    private javax.swing.JPanel panelAutores;
    private javax.swing.JPanel panelClientes;
    private javax.swing.JPanel panelCriarObra;
    private javax.swing.JPanel panelEditora;
    private javax.swing.JPanel panelEditoras;
    private javax.swing.JPanel panelEmprestimos;
    private javax.swing.JPanel panelPessoa;
    private javax.swing.JScrollPane scrollAutores;
    private javax.swing.JScrollPane scrollClientes;
    private javax.swing.JScrollPane scrollEditora;
    private javax.swing.JScrollPane scrollEditoras;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JLabel tblCriarPessoaSobrenome;
    private javax.swing.JTextField txfAtObraNumDeExemplares;
    private javax.swing.JTextField txfCriarObraAutores;
    private javax.swing.JTextField txfCriarObraNome;
    private javax.swing.JTextField txfCriarObraNumDePags;
    private javax.swing.JTextField txfCriarPessoaIdade;
    private javax.swing.JTextField txfCriarPessoaNome;
    private javax.swing.JTextField txfCriarPessoaSobrenome;
    private javax.swing.JTextField txfRegEmprestimoCliente;
    private javax.swing.JTextField txfRegEmprestimoExemplar;
    // End of variables declaration//GEN-END:variables
}
